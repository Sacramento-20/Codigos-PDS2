O objetivo deste exercício é praticar o uso de diferentes estruturas da STL.

Você deve fazer um programa para ajudar na gestão da folha salarial de times da NBA. Para isso, deve-se implementar três TADs: Jogador, Time e RegistroNBA. Cada TAD deve seguir as especificações abaixo:

Jogador: 
Atributos: string _nome, _posicao; int _salario;
Jogador(string nome, string posicao, int salario): Método construtor para a inicialização dos atributos. 
void imprimir_dados(): faz a impressão dos atributos no seguinte formato: "nome posicao salario", com uma quebra de linha ao final. Atenção, nesse caso utilize tab (\t) para separar os elementos.

Time: 
Atributos: string _nome; e _jogadores (que guarda uma coleção de elementos do tipo Jogador, você deve escolher a estrutura que julgar mais adequada para usar). 
Time(string nome): método construtor para a inicialização dos atributos. 
void adicionar_jogador(string nome, string posicao, int salario): adiciona um novo jogador na coleção. 
void imprimir_lista_jogadores(): imprime o nome do time, seguido das informações dos jogadores do time, ou seja, percorre toda a lista e chama o método 'imprimir_dados()'. A lista deve ser impressa ordenada de maneira descendente (maior para o menor) de acordo com os salários dos jogadores. 
void imprimir_folha_salarial_consolidada(): imprime o valor total da folha salarial do time, ou seja, o somatórios dos salários individuais. A impressão é no formato: "NomeTime ValorFolha". Utilize tab (\t) para separar os elementos.

RegistroNBA: 
Atributos: crie uma variável para guardar as informações dos times. Você deve escolher a estrutura que julgar mais adequada para usar, lembrando que deve ser fácil acessar cada time. Dica: um map é bem útil! 
void adicionar_time(string nome): adiciona um novo time na coleção. Você pode assumir que os nomes dos times serão únicos e formados por apenas uma palavra. 
void adicionar_jogador(string nome_time, string nome_jogador, string posicao, int salario): adiciona um novo jogador a um determinado time de acordo com os parâmetros informados. Atenção: se o time informado não existir na coleção, ele deve ser inserido nesse momento. 
void imprimir_lista_jogadores_time(string nome_time): imprime as informações dos jogadores do time informado. 
void imprimir_folha_consolidada_time(string nome_time): imprime o valor total da folha salarial do time informado. 
void imprimir_folha_salarial_geral(): imprime a folha salarial consolidada de todos os times registrados. A impressão deve ser feita em ordem alfabética pelos nomes dos times.

Você é livre para adicionar nos TADs quaisquer outros atributos ou métodos auxiliares que julgar necessário.

Por fim, você deve implementar o arquivo main.cpp e adicionar toda a parte de entrada/saída que será responsável por manipular os seguintes comandos:

't nome_time': comando para adicionar um time. 
'j nome_time nome_jogador posicao salario': comando para adicionar um jogador. Você pode assumir que todas as strings *não* possuem espaço, ou seja, são palavras únicas. 
'l nome_time': imprime a lista de jogadores de um determinado time. 
'f nome_time': imprime a folha salarial consolidada de um determinado time. 
'g': imprime a folha salarial geral. 
'b': deve chamar a função 'avaliacao_basica()' implementada no arquivo "avaliacao_basica_nba.hpp" (já incluído no main.cpp). Essa função faz uma avaliação do código (não apenas dos resultados).
